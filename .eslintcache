[{"C:\\Users\\evang\\dev\\projects\\kkc\\src\\index.tsx":"1","C:\\Users\\evang\\dev\\projects\\kkc\\src\\App.tsx":"2","C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Products\\index.tsx":"3","C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Product\\index.tsx":"4","C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Product\\styles.ts":"5","C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\index.ts":"6","C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Navbar\\index.tsx":"7","C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Navbar\\styles.ts":"8","C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Products\\styles.ts":"9","C:\\Users\\evang\\dev\\projects\\kkc\\src\\lib\\index.ts":"10","C:\\Users\\evang\\dev\\projects\\kkc\\src\\lib\\commerce\\commerce.js":"11","C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Cart\\index.tsx":"12","C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Cart\\styles.ts":"13","C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\CartItem\\index.tsx":"14","C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\CartItem\\styles.ts":"15","C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Checkout\\index.tsx":"16","C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Checkout\\styles.ts":"17","C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Confirmation\\index.tsx":"18","C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\AddressForm\\index.tsx":"19","C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\PaymentForm\\index.tsx":"20","C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Review\\index.tsx":"21"},{"size":240,"mtime":1610664062244,"results":"22","hashOfConfig":"23"},{"size":2977,"mtime":1610680770896,"results":"24","hashOfConfig":"23"},{"size":1005,"mtime":1610658117707,"results":"25","hashOfConfig":"23"},{"size":1233,"mtime":1610658287827,"results":"26","hashOfConfig":"23"},{"size":342,"mtime":1610642427122,"results":"27","hashOfConfig":"23"},{"size":143,"mtime":1610667186950,"results":"28","hashOfConfig":"23"},{"size":1391,"mtime":1610665168865,"results":"29","hashOfConfig":"23"},{"size":1526,"mtime":1610664726335,"results":"30","hashOfConfig":"23"},{"size":288,"mtime":1610644347692,"results":"31","hashOfConfig":"23"},{"size":54,"mtime":1610653121736,"results":"32","hashOfConfig":"23"},{"size":144,"mtime":1610653161408,"results":"33","hashOfConfig":"23"},{"size":2270,"mtime":1610666658565,"results":"34","hashOfConfig":"23"},{"size":561,"mtime":1610659908597,"results":"35","hashOfConfig":"23"},{"size":1350,"mtime":1610666475076,"results":"36","hashOfConfig":"23"},{"size":332,"mtime":1610662254741,"results":"37","hashOfConfig":"23"},{"size":2316,"mtime":1610680616106,"results":"38","hashOfConfig":"23"},{"size":1128,"mtime":1610667620250,"results":"39","hashOfConfig":"23"},{"size":137,"mtime":1610668560855,"results":"40","hashOfConfig":"23"},{"size":5496,"mtime":1610676575618,"results":"41","hashOfConfig":"23"},{"size":2772,"mtime":1610681838051,"results":"42","hashOfConfig":"23"},{"size":1008,"mtime":1610678045218,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"wf957c",{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\evang\\dev\\projects\\kkc\\src\\index.tsx",[],["90","91"],"C:\\Users\\evang\\dev\\projects\\kkc\\src\\App.tsx",["92","93","94"],"import React, { useEffect, useState } from 'react'\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { createIncrementalCompilerHost } from 'typescript';\r\nimport { Products, NavBar, Cart, Checkout } from './components/'\r\nimport { IProduct } from './components/Products';\r\nimport { commerceInstance } from './lib'\r\n\r\nexport const App: React.FC = (): JSX.Element => {\r\n\r\n\tconst initialValue: any = []\r\n\tconst [products, setProducts] = useState(initialValue);\r\n\tconst [order, setOrder] = useState({})\r\n\tconst [errorMsg, setErrorMsg] = useState(\"\")\r\n\tinterface initialValue {\r\n\t\ttotal_items: number\r\n\t}\r\n\r\n\tconst [cart, setCart] = useState(initialValue)\r\n\r\n\tconst addItemInBasketHandkler = async (pID: string, quantity: number) => {\r\n\t\tconst { cart } = await commerceInstance.cart.add(pID, quantity)\r\n\t\tsetCart(cart)\r\n\t}\r\n\r\n\tconst updateCartQuantityHandler = async (pID: string, quantity: number) => {\r\n\t\tconst { cart } = await commerceInstance.cart.update(pID, { quantity })\r\n\t\tsetCart(cart)\r\n\t}\r\n\r\n\tconst removeItemFromCartHandler = async (pID: string) => {\r\n\t\tconst { cart } = await commerceInstance.cart.remove(pID)\r\n\t\tsetCart(cart)\r\n\t}\r\n\r\n\tconst emptyCartHandler = async () => {\r\n\t\tconst { cart } = await commerceInstance.cart.empty();\r\n\t\tsetCart(cart)\r\n\t}\r\n\r\n\tconst fetchCart = async () => {\r\n\t\tconst items = await commerceInstance.cart.retrieve()\r\n\t\tsetCart(items)\r\n\t}\r\n\r\n\tconst refreshCard = async () => {\r\n\t\tconst newCard = await commerceInstance.cart.refresh();\r\n\t\tsetCart(newCard)\r\n\t}\r\n\r\n\tconst captureCheckoutHandler = async (checkoutTokenId: string, newOrder: any) => {\r\n\t\ttry {\r\n\t\t\tconst incomingOrder = await commerceInstance.checkout.capture(checkoutTokenId, newOrder)\r\n\t\t\tsetOrder(incomingOrder)\r\n\t\t\trefreshCard()\r\n\t\t} catch (error) {\r\n\t\t\tsetErrorMsg(error.data.error.message)\r\n\t\t}\r\n\t}\r\n\r\n\tconst fetchProducts = async () => {\r\n\t\tconst { data } = await commerceInstance.products.list();\r\n\t\tlet cache: IProduct[] = []\r\n\t\t// Reshape the data to match our schema\r\n\t\tfor (let i of data) {\r\n\t\t\tcache.push(...products, {\r\n\t\t\t\tid: i.id,\r\n\t\t\t\tname: i.name,\r\n\t\t\t\tdescription: i.description,\r\n\t\t\t\tprice: i.price.raw,\r\n\t\t\t\timage: i.media.source,\r\n\t\t\t})\r\n\t\t}\r\n\t\tsetProducts(cache)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchProducts()\r\n\t\tfetchCart()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<NavBar totatItemsInBasket={cart !== undefined && cart.total_items} />\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path=\"/\" >\r\n\t\t\t\t\t<Products prods={products} onAddItem={addItemInBasketHandkler} />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route exact path=\"/cart\">\r\n\t\t\t\t\t<Cart\r\n\t\t\t\t\t\tcart={cart !== undefined && cart}\r\n\t\t\t\t\t\tupdateCartQuantityHandler={updateCartQuantityHandler}\r\n\t\t\t\t\t\tremoveItemFromCartHandler={removeItemFromCartHandler}\r\n\t\t\t\t\t\temptyCartHandler={emptyCartHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route exact path=\"/checkout\">\r\n\t\t\t\t\t<Checkout\r\n\t\t\t\t\t\tcart={cart}\r\n\t\t\t\t\t\torder={order}\r\n\t\t\t\t\t\terror={errorMsg}\r\n\t\t\t\t\t\tcaptureCheckoutHandler={captureCheckoutHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</>\r\n\t)\r\n}\r\n","C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Products\\index.tsx",[],"C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Product\\index.tsx",[],"C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Product\\styles.ts",[],"C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\index.ts",[],"C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Navbar\\index.tsx",[],"C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Navbar\\styles.ts",[],"C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Products\\styles.ts",[],"C:\\Users\\evang\\dev\\projects\\kkc\\src\\lib\\index.ts",[],"C:\\Users\\evang\\dev\\projects\\kkc\\src\\lib\\commerce\\commerce.js",[],["95","96"],"C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Cart\\index.tsx",[],"C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Cart\\styles.ts",[],"C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\CartItem\\index.tsx",[],"C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\CartItem\\styles.ts",[],"C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Checkout\\index.tsx",[],"C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Checkout\\styles.ts",[],"C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Confirmation\\index.tsx",[],"C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\AddressForm\\index.tsx",["97","98","99","100"],"import { Box, Button, Grid, InputLabel, MenuItem, Select, TextField, Typography, useFormControl } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Controller, FormProvider, useForm, useFormContext } from 'react-hook-form'\r\nimport { Link } from 'react-router-dom';\r\nimport { idText } from 'typescript';\r\nimport { commerceInstance } from '../../lib';\r\n\r\ninterface IAddressForm {\r\n\tcheckoutToken: any\r\n\tnext: Function\r\n}\r\nexport const AddressForm: React.FC<IAddressForm> = (props) => {\r\n\tconst { checkoutToken, next } = props\r\n\tconst methods = useForm();\r\n\tconst [shippingCountries, setShippingCountries] = useState<any>([])\r\n\tconst [shippingCoutry, setShippingCoutry] = useState(\"\")\r\n\tconst [shippingSubDivisions, setShippingSubDivisions] = useState<any>([])\r\n\tconst [shippingSubDivision, setShippingSubDivision] = useState(\"\")\r\n\tconst [shippingOptions, setShippingOptions] = useState<any>([])\r\n\tconst [shippingOption, setShippingOption] = useState(\"\")\r\n\r\n\tconst fetchShippingCountries = async (checkoutTokenId: string) => {\r\n\t\tconst { countries } = await commerceInstance.services.localeListShippingCountries(checkoutTokenId)\r\n\t\tsetShippingCoutry(Object.keys(countries)[0])\r\n\t\tsetShippingCountries(countries)\r\n\t}\r\n\r\n\tconst fetchSubDivisions = async (countryCode: string) => {\r\n\t\tconst { subdivisions } = await commerceInstance.services.localeListSubdivisions(countryCode)\r\n\t\tsetShippingSubDivisions(subdivisions)\r\n\t\tsetShippingSubDivision(Object.keys(subdivisions)[0])\r\n\t}\r\n\r\n\tconst fetchShippingOptions = async (checkoutTokenId: string, country: string, region: string | null) => {\r\n\t\tconst options = await commerceInstance.checkout.getShippingOptions(checkoutTokenId, { country, region })\r\n\t\tsetShippingOptions(options)\r\n\t\tconsole.log(options[0]);\r\n\r\n\t\tsetShippingOption(options[0].id)\r\n\t}\r\n\r\n\tconst countries = Object.entries(shippingCountries).map(([code, name]: any) => ({\r\n\t\tid: code,\r\n\t\tlabel: name\r\n\t}))\r\n\r\n\tconst subdivisions = Object.entries(shippingSubDivisions).map(([code, name]: any) => ({\r\n\t\tid: code,\r\n\t\tlabel: name\r\n\t}))\r\n\r\n\tconst options = shippingOptions.map((shippingOption: any) => ({\r\n\t\tid: shippingOption.id,\r\n\t\tlabel: `${shippingOption.description} - (${shippingOption.price.formatted_with_symbol})`\r\n\t}))\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchShippingCountries(checkoutToken !== null && checkoutToken.id);\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tshippingCoutry && fetchSubDivisions(shippingCoutry)\r\n\t}, [shippingCoutry])\r\n\r\n\tuseEffect(() => {\r\n\t\tshippingSubDivisions && fetchShippingOptions(checkoutToken.id, shippingCoutry, shippingSubDivision)\r\n\t\tconsole.log(options);\r\n\r\n\t}, [shippingSubDivision])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Typography variant=\"h6\" gutterBottom>Shipping Address</Typography>\r\n\t\t\t<FormProvider {...methods}>\r\n\t\t\t\t<form onSubmit={methods.handleSubmit((data) => next({ ...data, setShippingCoutry, setShippingOption, shippingSubDivision }))}  >\r\n\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t<TxTField name=\"firstName\" label=\"First Name\" required />\r\n\t\t\t\t\t\t<TxTField name=\"lastName\" label=\"Last Name\" required />\r\n\t\t\t\t\t\t<TxTField name=\"address\" label=\"Address\" required />\r\n\t\t\t\t\t\t<TxTField name=\"email\" label=\"Email\" required />\r\n\t\t\t\t\t\t<TxTField name=\"city\" label=\"City\" required />\r\n\t\t\t\t\t\t<TxTField name=\"zip\" label=\"Postal code\" required />\r\n\r\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t<InputLabel>Shipping Country</InputLabel>\r\n\t\t\t\t\t\t\t<Select value={shippingCoutry} fullWidth onChange={(e: any) => setShippingCoutry(e.target.value)}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tcountries.map((country: { id: string, label: string }) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={country.id} value={country.id} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t{country.label}\r\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t<InputLabel >Shipping Subdivision</InputLabel>\r\n\t\t\t\t\t\t\t<Select value={shippingSubDivision} fullWidth onChange={(e: any) => setShippingSubDivision(e.target.value)}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tsubdivisions.map((subDivision: { id: string, label: string }) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={subDivision.id} value={subDivision.id} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t{subDivision.label}\r\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t<InputLabel >Shipping Options</InputLabel>\r\n\t\t\t\t\t\t\t<Select value={shippingOption} fullWidth onChange={(e: any) => setShippingOption(e.target.value)}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\toptions.map((option: { id: string, label: string }) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={option.id} value={option.id} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t{option.label}\r\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box component=\"div\" style={{ display: \"flex\", justifyContent: \"space-between\", marginTop: 30 }}>\r\n\t\t\t\t\t\t<Button component={Link} to=\"/cart\" variant=\"contained\" color=\"primary\" >Back to Cart</Button>\r\n\t\t\t\t\t\t<Button type=\"submit\" variant=\"contained\" color=\"primary\" >Next</Button>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</form>\r\n\t\t\t</FormProvider>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\ninterface TxTProps {\r\n\tname: string\r\n\tlabel: string\r\n\trequired: boolean\r\n}\r\n\r\nconst TxTField: React.FC<TxTProps> = (props) => {\r\n\tconst { name, label } = props\r\n\tconst { control } = useFormContext()\r\n\treturn (\r\n\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t<Controller\r\n\t\t\t\tas={TextField}\r\n\t\t\t\tcontrol={control}\r\n\t\t\t\tfullWidth\r\n\t\t\t\tlabel={label}\r\n\t\t\t\tname={name}\r\n\t\t\t/>\r\n\t\t</Grid>\r\n\t)\r\n}","C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\PaymentForm\\index.tsx",[],"C:\\Users\\evang\\dev\\projects\\kkc\\src\\components\\Review\\index.tsx",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":39},{"ruleId":"109","severity":1,"message":"110","line":14,"column":12,"nodeType":"107","messageId":"111","endLine":14,"endColumn":24},{"ruleId":"112","severity":1,"message":"113","line":79,"column":5,"nodeType":"114","endLine":79,"endColumn":7,"suggestions":"115"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"116","line":1,"column":82,"nodeType":"107","messageId":"108","endLine":1,"endColumn":96},{"ruleId":"105","severity":1,"message":"117","line":5,"column":10,"nodeType":"107","messageId":"108","endLine":5,"endColumn":16},{"ruleId":"112","severity":1,"message":"118","line":60,"column":5,"nodeType":"114","endLine":60,"endColumn":7,"suggestions":"119"},{"ruleId":"112","severity":1,"message":"120","line":70,"column":5,"nodeType":"114","endLine":70,"endColumn":26,"suggestions":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"@typescript-eslint/no-unused-vars","'createIncrementalCompilerHost' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-redeclare","'initialValue' is already defined.","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array.","ArrayExpression",["124"],"'useFormControl' is defined but never used.","'idText' is defined but never used.","React Hook useEffect has a missing dependency: 'checkoutToken'. Either include it or remove the dependency array.",["125"],"React Hook useEffect has missing dependencies: 'checkoutToken.id', 'options', 'shippingCoutry', and 'shippingSubDivisions'. Either include them or remove the dependency array.",["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [fetchProducts]",{"range":"133","text":"134"},"Update the dependencies array to be: [checkoutToken]",{"range":"135","text":"136"},"Update the dependencies array to be: [checkoutToken.id, options, shippingCoutry, shippingSubDivision, shippingSubDivisions]",{"range":"137","text":"138"},[2255,2257],"[fetchProducts]",[2367,2369],"[checkoutToken]",[2628,2649],"[checkoutToken.id, options, shippingCoutry, shippingSubDivision, shippingSubDivisions]"]